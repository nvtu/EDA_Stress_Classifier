score = scores,
group = groups
)
# Indentify extreme outliers
data %>%
group_by(group) %>%
identify_outliers(score)
# Test for data normality
data %>%
group_by(group) %>%
shapiro_test(score)
# QQ plot the data by group
ggqqplot(data, x = "score", facet.by = "group")
# Compute summary statistics by groups
data %>%
group_by(group) %>%
get_summary_stats(score, type = 'median_iqr')
# Visualization
bxp <- ggboxplot(
data, x = "group", y = "score",
ylab = "Score", xlab = "Groups", add = "jitter"
)
bxp
# Perform Wilcoxon rank sum test
stat.test <- data %>%
wilcox_test(score ~ group, alternative = "less", exact = FALSE, conf.int = TRUE) %>%
add_significance()
stat.test
wilcox.test(score ~ group, data = data, conf.int = TRUE, paired = FALSE, alternative = 'greater')
wilcox.test(results$chest_score, results$wrist_score, conf.int = TRUE, alternative = 'less')
# Compute effect size
data %>% wilcox_effsize(score ~ group, exact = FALSE, conf.int = TRUE)
# Report
stat.test <- stat.test %>% add_xy_position(x = "group")
bxp +
stat_pvalue_manual(stat.test, tip.length = 0) +
labs(subtitle = get_test_label(stat.test, detailed = TRUE))
# As the two samples are independent to each other because the machine learning models
# are trained independently with the same configuration except for the sampling method
# in user-dependent and user-independent models.
#install.packages("tidyverse")
#install.packages("ggpubr")
#install.packages("rstatix")
#install.packages("nortest")
#install.packages("coin")
library(coin)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(nortest)
# Load results of RQ1.1 for analysis
results = read_csv('RQ1-2Results.csv')
# Create new dataset
#scores = c(results$personal_score, results$general_score)
#groups = c(rep('Personal', length(results$personal_score)), rep('General', length(results$general_score)))
#data = data.frame(
#    score = scores,
#    group = groups
#)
scores = c(results$chest_score, results$wrist_score)
groups = c(rep('Chest', length(results$chest_score)), rep('Wrist', length(results$wrist_score)))
data = data.frame(
score = scores,
group = groups
)
# Indentify extreme outliers
data %>%
group_by(group) %>%
identify_outliers(score)
# Test for data normality
data %>%
group_by(group) %>%
shapiro_test(score)
# QQ plot the data by group
ggqqplot(data, x = "score", facet.by = "group")
# Compute summary statistics by groups
data %>%
group_by(group) %>%
get_summary_stats(score, type = 'median_iqr')
# Visualization
bxp <- ggboxplot(
data, x = "group", y = "score",
ylab = "Score", xlab = "Groups", add = "jitter"
)
bxp
# Perform Wilcoxon rank sum test
stat.test <- data %>%
wilcox_test(score ~ group, alternative = "less", exact = FALSE, conf.int = TRUE) %>%
add_significance()
stat.test
wilcox.test(score ~ group, data = data, conf.int = TRUE, paired = FALSE, alternative = 'greater')
wilcox.test(results$chest_score, results$wrist_score, conf.int = TRUE, alternative = 'less')
# Compute effect size
data %>% wilcox_effsize(score ~ group, exact = FALSE, conf.int = TRUE)
# Report
stat.test <- stat.test %>% add_xy_position(x = "group")
bxp +
stat_pvalue_manual(stat.test, tip.length = 0) +
labs(subtitle = get_test_label(stat.test, detailed = TRUE))
ggqqplot(data, x = "score", facet.by = "group")
wilcox.test(results$chest_score, results$wrist_score, conf.int = TRUE)
# As the two samples are independent to each other because the machine learning models
# are trained independently with the same configuration except for the sampling method
# in user-dependent and user-independent models.
#install.packages("tidyverse")
#install.packages("ggpubr")
#install.packages("rstatix")
#install.packages("nortest")
#install.packages("coin")
library(coin)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(nortest)
# Load results of RQ1.1 for analysis
results = read_csv('RQ1-2Results.csv')
# Create new dataset
#scores = c(results$personal_score, results$general_score)
#groups = c(rep('Personal', length(results$personal_score)), rep('General', length(results$general_score)))
#data = data.frame(
#    score = scores,
#    group = groups
#)
scores = c(results$chest_score, results$wrist_score)
groups = c(rep('Chest', length(results$chest_score)), rep('Wrist', length(results$wrist_score)))
data = data.frame(
score = scores,
group = groups
)
# Indentify extreme outliers
data %>%
group_by(group) %>%
identify_outliers(score)
# Test for data normality
data %>%
group_by(group) %>%
shapiro_test(score)
# QQ plot the data by group
ggqqplot(data, x = "score", facet.by = "group")
# Compute summary statistics by groups
data %>%
group_by(group) %>%
get_summary_stats(score, type = 'median_iqr')
# Visualization
bxp <- ggboxplot(
data, x = "group", y = "score",
ylab = "Score", xlab = "Groups", add = "jitter"
)
bxp
# Perform Wilcoxon rank sum test
stat.test <- data %>%
wilcox_test(score ~ group, alternative = "less", exact = FALSE, conf.int = TRUE) %>%
add_significance()
stat.test
wilcox.test(score ~ group, data = data, conf.int = TRUE, paired = FALSE)
wilcox.test(results$chest_score, results$wrist_score, conf.int = TRUE)
# Compute effect size
data %>% wilcox_effsize(score ~ group, exact = FALSE, conf.int = TRUE)
# Report
stat.test <- stat.test %>% add_xy_position(x = "group")
bxp +
stat_pvalue_manual(stat.test, tip.length = 0) +
labs(subtitle = get_test_label(stat.test, detailed = TRUE))
# As the two samples are independent to each other because the machine learning models
# are trained independently with the same configuration except for the sampling method
# in user-dependent and user-independent models.
#install.packages("tidyverse")
#install.packages("ggpubr")
#install.packages("rstatix")
#install.packages("nortest")
#install.packages("coin")
library(coin)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(nortest)
# Load results of RQ1.1 for analysis
results = read_csv('RQ1-1Results.csv')
# Create new dataset
scores = c(results$personal_score, results$general_score)
groups = c(rep('Personal', length(results$personal_score)), rep('General', length(results$general_score)))
data = data.frame(
score = scores,
group = groups
)
# scores = c(results$chest_score, results$wrist_score)
# groups = c(rep('Chest', length(results$chest_score)), rep('Wrist', length(results$wrist_score)))
# data = data.frame(
#    score = scores,
#    group = groups
# )
# Indentify extreme outliers
data %>%
group_by(group) %>%
identify_outliers(score)
# Test for data normality
data %>%
group_by(group) %>%
shapiro_test(score)
# QQ plot the data by group
ggqqplot(data, x = "score", facet.by = "group")
# Compute summary statistics by groups
data %>%
group_by(group) %>%
get_summary_stats(score, type = 'median_iqr')
# Visualization
bxp <- ggboxplot(
data, x = "group", y = "score",
ylab = "Score", xlab = "Groups", add = "jitter"
)
bxp
# Perform Wilcoxon rank sum test
stat.test <- data %>%
wilcox_test(score ~ group, alternative = "less", exact = FALSE, conf.int = TRUE) %>%
add_significance()
stat.test
wilcox.test(score ~ group, data = data, conf.int = TRUE, paired = FALSE)
wilcox.test(results$chest_score, results$wrist_score, conf.int = TRUE)
# Compute effect size
data %>% wilcox_effsize(score ~ group, exact = FALSE, conf.int = TRUE)
# Report
stat.test <- stat.test %>% add_xy_position(x = "group")
bxp +
stat_pvalue_manual(stat.test, tip.length = 0) +
labs(subtitle = get_test_label(stat.test, detailed = TRUE))
ggqqplot(data, x = "score", facet.by = "group")
scores = c(results$personal_score, results$general_score)
groups = c(rep('User-dependent Models', length(results$personal_score)), rep('User-independent Models', length(results$general_score)))
data = data.frame(
score = scores,
group = groups
)
ggqqplot(data, x = "score", facet.by = "group")
# As the two samples are independent to each other because the machine learning models
# are trained independently with the same configuration except for the sampling method
# in user-dependent and user-independent models.
#install.packages("tidyverse")
#install.packages("ggpubr")
#install.packages("rstatix")
#install.packages("nortest")
#install.packages("coin")
library(coin)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(nortest)
# Load results of RQ1.1 for analysis
results = read_csv('RQ1-1Results.csv')
# Create new dataset
scores = c(results$personal_score, results$general_score)
groups = c(rep('Personal', length(results$personal_score)), rep('General', length(results$general_score)))
data = data.frame(
score = scores,
group = groups
)
# scores = c(results$chest_score, results$wrist_score)
# groups = c(rep('Chest', length(results$chest_score)), rep('Wrist', length(results$wrist_score)))
# data = data.frame(
#    score = scores,
#    group = groups
# )
# Indentify extreme outliers
data %>%
group_by(group) %>%
identify_outliers(score)
# Test for data normality
data %>%
group_by(group) %>%
shapiro_test(score)
# QQ plot the data by group
ggqqplot(data, x = "score", facet.by = "group")
# Compute summary statistics by groups
data %>%
group_by(group) %>%
get_summary_stats(score, type = 'median_iqr')
# Visualization
bxp <- ggboxplot(
data, x = "group", y = "score",
ylab = "Score", xlab = "Groups", add = "jitter"
)
bxp
# Perform Wilcoxon rank sum test
stat.test <- data %>%
wilcox_test(score ~ group, alternative = "less", exact = FALSE, conf.int = TRUE) %>%
add_significance()
stat.test
wilcox.test(score ~ group, data = data, conf.int = TRUE, paired = FALSE)
wilcox.test(results$chest_score, results$wrist_score, conf.int = TRUE)
# Compute effect size
data %>% wilcox_effsize(score ~ group, exact = FALSE, conf.int = TRUE)
# Report
stat.test <- stat.test %>% add_xy_position(x = "group")
bxp +
stat_pvalue_manual(stat.test, tip.length = 0) +
labs(subtitle = get_test_label(stat.test, detailed = TRUE))
ad.test(results$personal_score)
ad.test(results$personal_score)
ad.test(results$general_score)
stat_test <- wilcox.test(score ~ group, data = data, conf.int = TRUE, paired = FALSE)
stat_test <- wilcox.test(score ~ group, data = data, conf.int = TRUE, paired = FALSE)
stat_test
stat_test <- wilcox.test(score ~ group, data = data, conf.int = TRUE, paired = FALSE, conf.level = 99)
stat_test
stat_test <- wilcox.test(score ~ group, data = data, conf.int = TRUE, paired = FALSE, conf.level = 0.99)
stat_test
stat_test <- wilcox.test(score ~ group, data = data, conf.int = TRUE, paired = FALSE, conf.level = 0.99, alternative = 'less')
stat_test
# As the two samples are independent to each other because the machine learning models
# are trained independently with the same configuration except for the sampling method
# in user-dependent and user-independent models.
#install.packages("tidyverse")
#install.packages("ggpubr")
#install.packages("rstatix")
#install.packages("nortest")
#install.packages("coin")
library(coin)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(nortest)
# Load results of RQ1.1 for analysis
results = read_csv('RQ1-1Results.csv')
# Create new dataset
# scores = c(results$personal_score, results$general_score)
# groups = c(rep('Personal', length(results$personal_score)), rep('General', length(results$general_score)))
# data = data.frame(
#    score = scores,
#    group = groups
# )
scores = c(results$chest_score, results$wrist_score)
groups = c(rep('Chest', length(results$chest_score)), rep('Wrist', length(results$wrist_score)))
data = data.frame(
score = scores,
group = groups
)
# Indentify extreme outliers
data %>%
group_by(group) %>%
identify_outliers(score)
# Test for data normality
data %>%
group_by(group) %>%
shapiro_test(score)
ad.test(results$personal_score)
ad.test(results$general_score)
# QQ plot the data by group
ggqqplot(data, x = "score", facet.by = "group")
# Compute summary statistics by groups
data %>%
group_by(group) %>%
get_summary_stats(score, type = 'median_iqr')
# Visualization
bxp <- ggboxplot(
data, x = "group", y = "score",
ylab = "Score", xlab = "Groups", add = "jitter"
)
bxp
# Perform Wilcoxon rank sum test
stat.test <- data %>%
wilcox_test(score ~ group, alternative = "less", exact = FALSE, conf.int = TRUE) %>%
add_significance()
stat.test
stat_test <- wilcox.test(score ~ group, data = data, conf.int = TRUE, paired = FALSE, conf.level = 0.99, alternative = 'less')
stat_test
wilcox.test(results$chest_score, results$wrist_score, conf.int = TRUE)
# Compute effect size
data %>% wilcox_effsize(score ~ group, exact = FALSE, conf.int = TRUE)
# Report
stat.test <- stat.test %>% add_xy_position(x = "group")
bxp +
stat_pvalue_manual(stat.test, tip.length = 0) +
labs(subtitle = get_test_label(stat.test, detailed = TRUE))
# As the two samples are independent to each other because the machine learning models
# are trained independently with the same configuration except for the sampling method
# in user-dependent and user-independent models.
#install.packages("tidyverse")
#install.packages("ggpubr")
#install.packages("rstatix")
#install.packages("nortest")
#install.packages("coin")
library(coin)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(nortest)
# Load results of RQ1.1 for analysis
results = read_csv('RQ1-2Results.csv')
# Create new dataset
# scores = c(results$personal_score, results$general_score)
# groups = c(rep('Personal', length(results$personal_score)), rep('General', length(results$general_score)))
# data = data.frame(
#    score = scores,
#    group = groups
# )
scores = c(results$chest_score, results$wrist_score)
groups = c(rep('Chest', length(results$chest_score)), rep('Wrist', length(results$wrist_score)))
data = data.frame(
score = scores,
group = groups
)
# Indentify extreme outliers
data %>%
group_by(group) %>%
identify_outliers(score)
# Test for data normality
data %>%
group_by(group) %>%
shapiro_test(score)
ad.test(results$personal_score)
ad.test(results$general_score)
# QQ plot the data by group
ggqqplot(data, x = "score", facet.by = "group")
# Compute summary statistics by groups
data %>%
group_by(group) %>%
get_summary_stats(score, type = 'median_iqr')
# Visualization
bxp <- ggboxplot(
data, x = "group", y = "score",
ylab = "Score", xlab = "Groups", add = "jitter"
)
bxp
# Perform Wilcoxon rank sum test
# stat.test <- data %>%
#   wilcox_test(score ~ group, alternative = "less", exact = FALSE, conf.int = TRUE) %>%
#   add_significance()
# stat.test
stat_test <- wilcox.test(score ~ group, data = data, conf.int = TRUE, paired = FALSE, conf.level = 0.99, alternative = 'less')
stat_test
wilcox.test(results$chest_score, results$wrist_score, conf.int = TRUE)
# Compute effect size
data %>% wilcox_effsize(score ~ group, exact = FALSE, conf.int = TRUE)
# Report
stat.test <- stat.test %>% add_xy_position(x = "group")
bxp +
stat_pvalue_manual(stat.test, tip.length = 0) +
labs(subtitle = get_test_label(stat.test, detailed = TRUE))
ad.test(results$chest_score)
ad.test(results$wrist_score)
# As the two samples are independent to each other because the machine learning models
# are trained independently with the same configuration except for the sampling method
# in user-dependent and user-independent models.
#install.packages("tidyverse")
#install.packages("ggpubr")
#install.packages("rstatix")
#install.packages("nortest")
#install.packages("coin")
library(coin)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(nortest)
# Load results of RQ1.1 for analysis
results = read_csv('RQ1-1Results.csv')
# Create new dataset
scores = c(results$personal_score, results$general_score)
groups = c(rep('Personal', length(results$personal_score)), rep('General', length(results$general_score)))
data = data.frame(
score = scores,
group = groups
)
# scores = c(results$chest_score, results$wrist_score)
# groups = c(rep('Chest', length(results$chest_score)), rep('Wrist', length(results$wrist_score)))
# data = data.frame(
#    score = scores,
#    group = groups
# )
# Indentify extreme outliers
data %>%
group_by(group) %>%
identify_outliers(score)
# Test for data normality
data %>%
group_by(group) %>%
shapiro_test(score)
#
# ad.test(results$chest_score)
# ad.test(results$wrist_score)
# QQ plot the data by group
ggqqplot(data, x = "score", facet.by = "group")
# Compute summary statistics by groups
data %>%
group_by(group) %>%
get_summary_stats(score, type = 'median_iqr')
# Visualization
bxp <- ggboxplot(
data, x = "group", y = "score",
ylab = "Score", xlab = "Groups", add = "jitter"
)
bxp
# Perform Wilcoxon rank sum test
# stat.test <- data %>%
#   wilcox_test(score ~ group, alternative = "less", exact = FALSE, conf.int = TRUE) %>%
#   add_significance()
# stat.test
stat_test <- wilcox.test(score ~ group, data = data, conf.int = TRUE, paired = FALSE, conf.level = 0.99, alternative = 'less')
stat_test
wilcox.test(results$chest_score, results$wrist_score, conf.int = TRUE)
# Compute effect size
data %>% wilcox_effsize(score ~ group, exact = FALSE, conf.int = TRUE)
# Report
stat.test <- stat.test %>% add_xy_position(x = "group")
bxp +
stat_pvalue_manual(stat.test, tip.length = 0) +
labs(subtitle = get_test_label(stat.test, detailed = TRUE))
